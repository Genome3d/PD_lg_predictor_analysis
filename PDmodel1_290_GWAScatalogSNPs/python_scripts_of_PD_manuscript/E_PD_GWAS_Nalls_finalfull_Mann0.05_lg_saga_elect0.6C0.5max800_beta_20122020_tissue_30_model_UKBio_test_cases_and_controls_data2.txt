# Combine the PD UK Biobank derived case eQTL table and 30 sets of the PD UK Biobank derived control eQTL tables
# Evalutate PD model-1 with the 30 sets of the combined PD UK biobank derived test data

import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import roc_curve, auc, roc_auc_score
from sklearn import linear_model
import pandas as pd
from sklearn.model_selection import GridSearchCV
from tsfresh import extract_features, select_features
from  tsfresh.feature_selection.relevance import calculate_relevance_table
import pickle
import sklearn.metrics as metrics


temp_table = pd.read_csv("PD_GWAS_Nalls_Tissue_SNP_Gene_eQTL_table_beta.txt", sep="\t")
x_features = temp_table[temp_table.columns[6:]]
y_phenotype = temp_table['PHENOTYPE'] - 1

X_selected0_1 = select_features(x_features, y_phenotype,test_for_binary_target_real_feature='mann', test_for_real_target_binary_feature='mann', fdr_level=0.05 )
full_columns = list(temp_table.columns[:6]) + list(X_selected0_1.columns)
org_table = temp_table[full_columns]
org_table.shape
>>> org_table.shape
(4366, 11294)


features = pd.read_csv("PD_GWAS_Nalls_finalfull_Mann0.05_lg_saga_elect0.6C0.5max800_beta_20122020features.txt", names = ['fields'], sep="\t")
model_com = features['fields'].values.tolist()
>>> features.shape
(833, 1)


eQTL_table = pd.read_csv("PD_UKBio_full_NallsGWAS_a_41SNP_cases_beta_928_eQTL_table.txt", sep="\t")

>>> eQTL_table.shape
(928, 7069)


model_com2 = eQTL_table.columns[:6].values.tolist() + model_com
len(model_com2)
>>> len(model_com2)
839



case_table2 = eQTL_table[model_com2]
>>> case_table2.shape
(1724, 113)

#case_table2 = case_table.dropna()
>>> case_table2.shape
(928, 839)


#eQTL_table2 = pd.read_csv("PD_UKBio_controls_Nalls_90_SNPs_swaped_beta_eQTL_table.txt", sep="\t")


#control_table = eQTL_table2[model_com2]

#control_table2 = control_table.dropna()

filename = 'PD_GWAS_Nalls_finalfull_Mann0.05_lg_saga_elect0.6C0.5max800_beta_20122020.sav'
loaded_model = pickle.load(open(filename, 'rb'))

lg_clf = loaded_model

num = [1,2,3,4,5,6,7,8,9,10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]

AUCs = []

for p in num:
	control_file = "Control_data/PD_UKBio_full_NallsGWAS_a_41SNP_controls_beta_eQTL_table" + str(p) + ".txt"
	sub_control_table = pd.read_csv(control_file, sep="\t")
	sub_control_table2 = sub_control_table[model_com2]
	test_data = pd.concat([case_table2,sub_control_table2],ignore_index=True)
	y_test = test_data['PHENOTYPE'] - 1
	x_test = test_data[test_data.columns[6:]]
	for fe in org_table.columns[6:]:
		if fe not in test_data.columns[6:]:
			x_test[fe] = 0
	x_test2 = x_test[org_table.columns[6:]]
	AUCs.append(roc_auc_score(y_test, lg_clf.predict_proba(x_test2)[:,1]))
	
results = pd.DataFrame(AUCs,columns=['UKBIO PD AUC'])
results.to_csv("Control_data/30_UKBio_PD_AUCs2.txt", sep='\t', index=False)
results['UKBIO PD AUC'].mean()
>>> results['UKBIO PD AUC'].mean()
0.5723128680766074





